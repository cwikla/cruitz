<% include Rails.application.routes.url_helpers %>
<% include Rails.application.helpers %>

import React, { 
  Component
} from 'react';

import PropTypes from 'prop-types';
import ReactDOM from 'react-dom';
import { 
  render 
} from 'react-dom';

import {
  createStore,
  applyMiddleware
} from 'redux';

import {
  Provider
} from 'react-redux';

import {
  capFirstLetter,
  childrenWithProps,
  propsMergeClassName,
} from '../util/util';

import JobPage, { JobSideButton } from './job_page';
import CandidatePage from './candidate_page';
import RecruiterPage from './recruiter_page';


const Title = (props) => (
  <label {...propsMergeClassName(props, "title")}>{props.children}</label>
);


class SidebarButton extends Component {
  constructor(props) {
    super(props);

    this.state = {
      selected: false
    };

  }

  render() {
    let myClass = "sidebar-button" + this.state.selected ? " selected" : "";
    return(
      <li {...propsMergeClassName(this.props, myClass)} >{this.props.children}</li>
    );
   }
}

class Sidebar extends Component {
  render() {
    //let newKids = React.Children.map(this.props.children, (child) => {
      //return (barButton>{child}</SidebarButton>);
    //});
    let newKids = this.props.children;

    return (
      <ul id="side-bar" {...this.props} >
        {newKids}
      </ul>
    );
  }
}

const Row = (props) => (
  <div {...propsMergeClassName(props, "row")} >{props.children}</div>
);

const Column = (props) => (
  <div {...propsMergeClassName(props, "col")}>{props.children}</div>
);

const JOBS_PAGE = 'jobs';
const CANDIDATES_PAGE = 'candidates';
const RECRUITERS_PAGE = 'recruiters';

class Container extends Component {
  constructor(props) {
    super(props);

    this.state = {
      openPage: JOBS_PAGE
    };
  }

  setPage(page) {
    this.setState({openPage: page});
    //alert(page);
  }

  render() {
    return(
      <Row>
        <Column className="col-md-2 red" id="sidebar">
          <Sidebar {...this.props}>
            <SidebarButton target={this.jobsPage} 
              selected={this.state.openPage==JOBS_PAGE} 
              onClick={(e) => {e.preventDefault(); this.setPage(JOBS_PAGE); } }
            >Jobs</SidebarButton>
            <SidebarButton 
              selected={this.state.openPage==CANDIDATES_PAGE} 
              onClick={(e) => {e.preventDefault(); this.setPage(CANDIDATES_PAGE); } }
            >Candidates</SidebarButton>
            <SidebarButton
              selected={this.state.openPage==RECRUITERS_PAGE} 
              onClick={(e) => {e.preventDefault(); this.setPage(RECRUITERS_PAGE); } }
            >Recruiters</SidebarButton>
          </Sidebar>
        </Column>
        <Column className="col-md-10 blue" id="main_page">
          <CandidatePage {...this.props.candidatesPageProps} selected={this.state.openPage==CANDIDATES_PAGE}/>
          <RecruiterPage {...this.props.recruiterPageProps} selected={this.state.openPage==RECRUITERS_PAGE}/>
          <JobPage {...this.props.jobsPageProps} selected={this.state.openPage==JOBS_PAGE}/>
        </Column>
      </Row>
    );
  }
}

const Footer = (props) => (
  <div>Footer {props.name}!</div>
);

///
///
///

render(
  <Provider>
    <Container />
  </Provider>,
  document.getElementById('container')
);
