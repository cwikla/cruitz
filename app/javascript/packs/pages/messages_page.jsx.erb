<% include Rails.application.routes.url_helpers %>
<% include Rails.application.helpers %>

import React, { 
  Component
} from 'react';

import PropTypes from 'prop-types';
import ReactDOM from 'react-dom';

import Pyr from '../pyr/pyr';
import Page from './page';
import Sheet from './sheet';

const MESSAGES_URL = "/messages";

class MessageItem extends Component {

  render() {
    return (
       <h3>This is a message item</h3>
    );
  }
}

class IndexSheet extends Sheet.Index {
  key(a) {
    return MessagesPage.key(a)
  }

  renderItem() {
    return ( <MessageItem /> );
  }
}

class ShowSheet extends Sheet.Show {
  key(a) {
    return MessagesPage.key(a)
  }

  renderItem() {
    return ( <MessageItem /> );
  }
}

class MessagesPage extends Page {
  constructor(props) {
    super(props);

    this.onMessagesIndex = this.onMessages.bind(this);
  }

  key(a) {
    return "message" + "-" + a.id;
  }

  onMessages(messages) {
    this.setState({
      items: messages
    });
  }

  getItems() {
    $.getJSON({
      type: Pyr.Method.GET,
      url: MESSAGES_URL,
      context: this
    }).done(function(data, textStatus, jaXHR) {
        this.onMessagesIndex(data.messages);
    }).fail(function(jaXHR, textStatus, errorThrown) {
      Pyr.ajaxError(jaXHR, textStatus, errorThrown);
    });
  }

  indexSheet() {
    return (
      <IndexSheet 
        {...this.props} 
        items={this.state.items} 
        onSelect={this.onSelect} 
      />
    );
  }
  
  actionSheet(action) {
    let sheet = Sheet.sheetComponent(action || "Show");
    let ActionSheet = eval(sheet);

    return (
      <ActionSheet 
        {...this.props}
        items={this.state.items}
        selected={this.state.selected}
        onAction={this.onAction}
        onUnaction={this.onUnsaction}
      />
    );
    
  }
}

function key(item) {
  return "message-" + item.id;
}
MessagesPage.key = key;

export default MessagesPage;
