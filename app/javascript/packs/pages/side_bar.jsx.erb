<% include Rails.application.routes.url_helpers %>
<% include Rails.application.helpers %>

import React, { 
  Component
} from 'react';

import PropTypes from 'prop-types';
import ReactDOM from 'react-dom';
import { 
  render 
} from 'react-dom';

import {
  createStore,
  applyMiddleware
} from 'redux';

import {
  Provider
} from 'react-redux';

import Pyr from '../pyr/pyr';

class Button extends Component {
  constructor(props) {
    super(props);
  }

  render() {
    let myClass = "sidebar-button" + (this.props.selected ? " selected" : "");
    return(
      <li {...Pyr.Util.propsMergeClassName(this.props, myClass)} ><span className="name">{this.props.children}</span></li>
    );
   }
}

class Section extends Component {
  constructor(props) {
    super(props);
  }

  render() {
    return (
      <div {...Pyr.Util.propsMergeClassName(this.props, "")}>
        {this.props.children}
      </div>
    );
  }
}

const Header = (props) => (
   <label {...Pyr.Util.propsMergeClassName(props, "sidebar-header")}>{props.children}</label>
);

const Menu = (props) => (
  <ul {...Pyr.Util.propsMergeClassName(props, "sidebar-menu")}>
    {props.children}
   </ul>
);

class Main extends Component {
  render() {
    let newKids = this.props.children;

    return (
      <div id="sidebar-main" {...Pyr.Util.propsMergeClassName(this.props, "sidebar-main")} >
        {newKids}
      </div>
    );
  }
}

const Sidebar = {
  Main,
  Menu,
  Header, 
  Section,
  Button
};

export default Sidebar;
